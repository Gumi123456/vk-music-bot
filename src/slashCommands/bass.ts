import {Command} from '../SlashCommandManager'
import Utils, {ErrorMessageType} from '../Utils'

type LevelType = '–≤—ã–∫–ª' | '—Å–ª–∞–±—ã–π' | '—Å—Ä–µ–¥–Ω–∏–π' | '–º–æ—â–Ω—ã–π'

export default new Command({
  name: 'bass',
  premium: true,
  adminOnly: false,
  djOnly: true,
  execute: async function ({ respond, client, guild, voice, args }) {
    const player = client.manager.get(guild.id)
    if (!player) return respond({ embeds: [Utils.generateErrorMessage('–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.')], ephemeral: true })
    
    if (!voice) return respond({ embeds: [Utils.generateErrorMessage('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.')], ephemeral: true })
    //if (channel.id !== player.voiceChannel) return message.reply("–≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ —Ç–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")

    const level = args[0].toLowerCase() as LevelType

    if (level) {
      let gain = 0.0

      switch (level) {
      case '–≤—ã–∫–ª':
        gain = 0.0
        break
      case '—Å–ª–∞–±—ã–π':
        gain = 0.15
        break
      case '—Å—Ä–µ–¥–Ω–∏–π':
        gain = 0.25
        break
      case '–º–æ—â–Ω—ã–π':
        gain = 0.35
        break
      }

      const bands = new Array(3)
        .fill(null)
        .map((_, i) =>
          ({ band: i, gain })
        )

      player.setEQ(...bands)

      respond({
        embeds: [Utils.generateErrorMessage(`üîà –£—Ä–æ–≤–µ–Ω—å –±–∞—Å –±—É—Å—Ç–∞ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ \`${level}\`.\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: \`–≤—ã–∫–ª\`, \`—Å–ª–∞–±—ã–π\`, \`—Å—Ä–µ–¥–Ω–∏–π\`, \`–º–æ—â–Ω—ã–π\``,
          ErrorMessageType.NoTitle)]
      })
    } else {
      respond({embeds: [Utils.generateErrorMessage('üîà –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: `–≤—ã–∫–ª`, `—Å–ª–∞–±—ã–π`, `—Å—Ä–µ–¥–Ω–∏–π`, `–º–æ—â–Ω—ã–π`')]})
    }
  }
})
