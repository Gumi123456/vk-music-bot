import {Command} from '../SlashCommandManager'
import Utils, {ErrorMessageType} from '../Utils'

export default new Command({
  name: 'repeat',
  aliases: ['l', 'rp', 'loop'],
  djOnly: true,
  adminOnly: false,
  premium: false,
  execute: async function({ guild, voice, client, args, respond }) {
    const player = client.manager.get(guild.id)
    if (!player) return respond({ embeds: [Utils.generateErrorMessage('–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.')], ephemeral: true })

    if (!voice) return respond({ embeds: [Utils.generateErrorMessage('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.')], ephemeral: true })

    if (args.length) {
      if (args[0] === '–æ—á–µ—Ä–µ–¥—å') {
        player.setQueueRepeat(true)
        respond({ embeds: [Utils.generateErrorMessage('üîÅ –í–∫–ª—é—á–µ–Ω –ø–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏.', ErrorMessageType.NoTitle)] })
        return
      }
      if (args[0] === '—Ç—Ä–µ–∫') {
        player.setTrackRepeat(true)
        respond({ embeds: [Utils.generateErrorMessage('üîÅ –í–∫–ª—é—á–µ–Ω –ø–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞.', ErrorMessageType.NoTitle)] })
        return
      }
      if (args[0] === '–≤—ã–∫–ª') {
        player.setQueueRepeat(false)
        player.setTrackRepeat(false)
        respond({ embeds: [Utils.generateErrorMessage('üîÅ –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω.', ErrorMessageType.NoTitle)] })
        return
      }
    }

    let msg
    if (player.trackRepeat) msg = '–ü–æ–≤—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞'
    else if (player.queueRepeat) msg = '–ü–æ–≤—Ç–æ—Ä –æ—á–µ—Ä–µ–¥–∏'

    if (msg)
      respond({ embeds: [Utils.generateErrorMessage(`üîÅ ${msg} —Å–µ–π—á–∞—Å –≤–∫–ª—é—á–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: \`–æ—á–µ—Ä–µ–¥—å\`, \`—Ç—Ä–µ–∫\`, \`–≤—ã–∫–ª\``, ErrorMessageType.NoTitle)]})
    else
      respond({ embeds: [Utils.generateErrorMessage('üîÅ –ü–æ–≤—Ç–æ—Ä —Å–µ–π—á–∞—Å –≤—ã–∫–ª—é—á–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: `–æ—á–µ—Ä–µ–¥—å`, `—Ç—Ä–µ–∫`, `–≤—ã–∫–ª`', ErrorMessageType.NoTitle)]})
  }
})
