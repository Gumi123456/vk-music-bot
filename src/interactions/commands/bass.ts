import Utils, { ErrorMessageType } from '../../utils.js'
import { CommandCustomInteraction } from '../commandInteractions.js'

const levelTypes = ['–≤—ã–∫–ª', '—Å–ª–∞–±—ã–π', '—Å—Ä–µ–¥–Ω–∏–π', '–º–æ—â–Ω—ã–π']

export const interaction: CommandCustomInteraction = {
  name: 'bass',
  premium: true,
  adminOnly: false,
  djOnly: true,
  execute: async function ({ respond, client, guild, interaction }) {
    const player = client.playerManager.get(guild.id)

    if (!player) {
      await Utils.sendNoPlayerMessage(respond)
      return
    }

    if (!player.current) {
      await Utils.sendNoQueueMessage(respond)
      return
    }

    await Utils.checkNodeState(player, respond)
    //if (channel.id !== player.voiceChannel) return message.reply("–≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–µ –≤ —Ç–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")

    const level = interaction.options.getString('—Ä–µ–∂–∏–º') as string

    if (levelTypes.includes(level)) {
      let gain = 0.0

      switch (level) {
        case '–≤—ã–∫–ª':
          gain = 0.0
          break
        case '—Å–ª–∞–±—ã–π':
          gain = 0.15
          break
        case '—Å—Ä–µ–¥–Ω–∏–π':
          gain = 0.25
          break
        case '–º–æ—â–Ω—ã–π':
          gain = 0.35
          break
      }

      const bands = new Array(3).fill(null).map((_, i) => ({ band: i, gain }))

      await player.player.setEqualizer(bands)

      await respond({
        embeds: [
          Utils.generateErrorMessage(
            `üîà –£—Ä–æ–≤–µ–Ω—å –±–∞—Å –±—É—Å—Ç–∞ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ \`${level}\`.\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: \`–≤—ã–∫–ª\`, \`—Å–ª–∞–±—ã–π\`, \`—Å—Ä–µ–¥–Ω–∏–π\`, \`–º–æ—â–Ω—ã–π\`. \n–£—Ä–æ–≤–µ–Ω—å –±–∞—Å –±—É—Å—Ç–∞ –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`,
            ErrorMessageType.NoTitle
          )
        ]
      })
    } else {
      await respond({
        embeds: [Utils.generateErrorMessage('üîà –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: `–≤—ã–∫–ª`, `—Å–ª–∞–±—ã–π`, `—Å—Ä–µ–¥–Ω–∏–π`, `–º–æ—â–Ω—ã–π`')]
      })
    }
  }
}
